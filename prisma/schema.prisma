// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id    Int    @id @default(autoincrement())
  email String @unique
  games Game[]
}

model Game {
  id       Int        @id @default(autoincrement())
  playerId Int
  player   Player     @relation(fields: [playerId], references: [id])
  status   GameStatus
  rounds   Round[]
}

enum GameStatus {
  SHOP
  PLAYING
  COMPLETED
}

model Round {
  id Int @id @default(autoincrement())

  number Int

  gameId Int
  game   Game @relation(fields: [gameId], references: [id])

  playerDeckId Int
  enemyDeckId  Int
  playerDeck   Deck @relation("PlayerDeck", fields: [playerDeckId], references: [id])
  enemyDeck    Deck @relation("EnemyDeck", fields: [enemyDeckId], references: [id])

  shopCards ShopCard[]

  health Int
  bytes  Int

  status RoundStatus
}

enum RoundStatus {
  WIN
  LOSE
  DRAW
}

model Deck {
  id Int @id @default(autoincrement())

  Card         Card[]
  playerRounds Round[] @relation("PlayerDeck")
  enemyRounds  Round[] @relation("EnemyDeck")
}

model Card {
  cardId   Int @id @default(autoincrement())
  deckId   Int
  position Int

  deck Deck @relation(fields: [deckId], references: [id])
}

model ShopCard {
  id       Int @id @default(autoincrement())
  cardId   Int
  position Int

  roundId Int
  round   Round @relation(fields: [roundId], references: [id])
}
